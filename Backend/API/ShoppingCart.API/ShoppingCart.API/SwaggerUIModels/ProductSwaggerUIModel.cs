using Microsoft.AspNetCore.Http;
using Swashbuckle.AspNetCore.Annotations;
using System.Text.Json.Serialization;

namespace ShoppingCart.API
{
    /// <summary>
    /// Summary:
    ///     Represents the form data input fields in the Swagger UI while using [FromForm] parameter attribute to hide the private input fields.
    /// ToDo:
    ///     Find a better approach in order to avoid model duplicaton and works as intended with the Swagger UI.
    ///         ProductSwaggerUIModel -> Hides certain input fields by using private access specifier.
    ///         ProductModel -> This model is used by the SQLDataProviders where all the properties have public access specifier.
    /// </summary>
    public class ProductSwaggerUIModel
    {
        /// <summary>
        /// Uniquely identifies each product with it's unique ID.
        /// </summary>
        /// <example>1</example>
        private int ProductID { get; set; }
        /// <summary>
        /// Uniquely identifies each product category with it's unique ID.
        /// </summary>
        /// <example>1</example>
        private int ProductCategoryID { get; set; }
        /// <summary>
        /// Defines the category name of this product
        /// </summary>
        /// <example>Branded Foods</example>
        public string ProductCategoryName { get; set; }
        /// <summary>
        /// Defines the name of this product
        /// </summary>
        /// <example>Pepsi</example>
        public string ProductName { get; set; }
        /// <summary>
        /// Defines the price of this product
        /// </summary>
        /// <example>100</example>
        public int ProductPrice { get; set; }
        /// <summary>
        /// Defines the description of this product
        /// </summary>
        /// <example>A product from ABC company</example>
        public string ProductDescription { get; set; }
        /// <summary>
        /// Defines the image in binary format to be saved in a server location
        /// </summary>
        /// <example>Binary object</example>
        public IFormFile ProductImage { get; set; }
        /// <summary>
        /// Defines the image name of this product which is autogenerated by the server
        /// </summary>
        private string ProductImageName { get; set; } //Hide this input in the Swagger UI using private access specifier
    }
}
